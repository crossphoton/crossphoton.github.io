[{"categories":null,"contents":"This is a utility to manage deployments on a linux server [Might be compatible with other OSs too, didn\u0026rsquo;t test]. It provides an http server for webhooks and CLI for management.\nGITHUB README BELOW DIPLOY A utility to manage your linux deployments.\nHow does it work  You start a server using diploy server diploy exposes a http server for instructions [take care of firewall !!] You create a diploy.yml with below format file and run diploy add in the same directory. Now you get endpoits for each configuration you add with the below format. Use these as webhooks with Github\u0026hellip; or just manually. Or just use the CLI for manual work.  diploy.yml name: \u0026lt;Application Name\u0026gt; // These should be unique across installation\rupdate: // Specify command to update\r// codebase (optional [default `git pull`])\rcommand: git pull // Command/Script to run to update\rtype: command // Whether a script (run using /bin/sh) or command\rbuild: // To build stuff\rcommand: echo This is build\rtype: command\rrun: // To start the application\rcommand: echo This is run\rtype: command\rInstallation  Use the command curl -s https://raw.githubusercontent.com/crossphoton/diploy/main/scripts/install.sh | /bin/sh (This starts the setup too) Use go get github.com/crossphoton/diploy and build it Clone the repository (or download ZIP)  endpoints All requests are POST requests.\nFor now there is no authentication in this. (See TODO)\nStart processes start:\n update codebase: /start/update/{name} build application: /start/build/{name} run application: /start/run/{name}  Stop processes for a given application stop: /stop/{name}\nRun a sequence of operations /seq/\u0026lt;a\u0026gt;+\u0026lt;b\u0026gt;+\u0026lt;c\u0026gt;/{name}\nExamples:  /seq/stop+update+build+run/golang-app /seq/restart/nodejs-app /seq/update+restart/website  CLI Usage Usage:\rdiploy [command]\rAvailable Commands:\radd add a configuration\rhelp Help about any command\rremove remove a configuaration by name\rserver Start diploy server\rstart start a service with name\rstop stop a service with name\rFlags:\r-h, --help help for diploy\r--logs string specify logs location (default \u0026#34;./diploy\u0026#34;)\rUse \u0026#34;diploy [command] --help\u0026#34; or \u0026#34;diploy help [command]\u0026#34; for more information about a command.\rExtra: Use diploy server setup to setup a systemd file.\nCaveats  Processes started with diploy will also stop if diploy is stopped.  Cleanup You can use the script if defaults were used during setup\ncurl -s https://raw.githubusercontent.com/crossphoton/diploy/main/scripts/cleanup.sh | /bin/sh\nTroubleshooting  If problems with database: Specify logs location using --logs flag If problems with connection: Specify server address using --addr flag  Todo See the dedicated TODO file.\nStuff Used  gorm + sqlite gorilla/mux cobra go-yaml  ","permalink":"https://crossphoton.tech/projects/creations/diploy/","tags":["linux","webhooks","deployment","sqlite","golang","cobra"],"title":"Diploy"},{"categories":null,"contents":"This project comprises of a server and a frontend application.\nThe server is built on Express JS which serves a REST API. Database used is Postgres, session management is done using Redis, profile expiry is done using Redis Pub/Sub.\nThe frontend application is made in Next JS with Material Design with functional components utilizing the hooks.\n","permalink":"https://crossphoton.tech/projects/creations/tnp-iiitr-portal/","tags":["redis","postgres","expressjs","nextjs","javascript",""],"title":"TNP IIITR Portal"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;JSON\u0026#34;] Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n... \u0026#34;contents\u0026#34;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026#34;tags\u0026#34;:{{ .Params.tags | jsonify }}{{end}}, \u0026#34;categories\u0026#34; : {{ .Params.categories | jsonify }}, ... Edit fuse.js options to Search static/js/search.js\nkeys: [ \u0026#34;title\u0026#34;, \u0026#34;contents\u0026#34;, \u0026#34;tags\u0026#34;, \u0026#34;categories\u0026#34; ] ","permalink":"https://crossphoton.tech/search/","tags":null,"title":"Search Results"}]